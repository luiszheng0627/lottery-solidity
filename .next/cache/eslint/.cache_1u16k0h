[{"/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/_app.js":"1","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/campaign/index.js":"2","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/campaign/new.js":"3","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/index.js":"4","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/lottery/index.js":"5","/Volumes/WORK/study/1.solidity/lottery-solidity/client/components/loader.js":"6"},{"size":1348,"mtime":1635891917000,"results":"7","hashOfConfig":"8"},{"size":937,"mtime":1635891185000,"results":"9","hashOfConfig":"8"},{"size":106,"mtime":1635891205000,"results":"10","hashOfConfig":"8"},{"size":249,"mtime":1635888997000,"results":"11","hashOfConfig":"8"},{"size":2591,"mtime":1635889526000,"results":"12","hashOfConfig":"8"},{"size":308,"mtime":1635887547000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yzjprm",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/_app.js",[],"/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/campaign/index.js",["29","30","31","32"],"import React, { Fragment, useContext, useCallback, useEffect, useState } from 'react';\nimport { useAsyncMemo } from 'use-async-memo';\nimport _ from 'lodash';\nimport { Panel } from 'primereact/panel';\n\nimport Factory from 'contracts/CampaignFactory.json';\nimport MyCtx from 'utils/context';\n\n\nexport default function CampaignList(props) {\n\tconst { web3, networkId } = useContext(MyCtx);\n\tconst factorySC = useAsyncMemo(async () => {\n\t\tif (_.isEmpty(web3)) return;\n\t\tconst deployedNetwork = Factory.networks[networkId];\n\n\t\treturn new web3.eth.Contract(\n\t\t\tFactory.abi,\n\t\t\tdeployedNetwork && deployedNetwork.address,\n\t\t);\n\t}, [web3]);\n\n\tconst campaigns = useAsyncMemo(async () => {\n\t\tif (_.isEmpty(factorySC)) return;\n\t\treturn factorySC.methods.getDeploayedCampaigns().call();\n\t}, [factorySC]);\n\n\treturn (\n\t\t<div className=\"flex-1 w-6rem border-round p-4\">\n\t\t\t<Panel header=\"Campaign\">\n\t\t\t\t<div>{campaigns}</div>\n\t\t\t</Panel>\n\t\t</div>\n\t);\n};","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/campaign/new.js",[],"/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/index.js",["33","34","35"],"import React from \"react\";\nimport Link from 'next/link'\n\nexport default () => {\n\treturn (<ul>\n\t\t<li>\n\t\t\t<Link href=\"/lottery\">\n\t\t\t\t<a>Lottery</a>\n\t\t\t</Link>\n\t\t</li>\n\t\t<li>\n\t\t\t<Link href=\"/campaign\">\n\t\t\t\t<a>Campaign</a>\n\t\t\t</Link>\n\t\t</li>\n\t</ul>);\n};","/Volumes/WORK/study/1.solidity/lottery-solidity/client/pages/lottery/index.js",["36","37","38","39"],"import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useAsyncMemo } from 'use-async-memo'\nimport _ from 'lodash';\n\nimport MyCtx from 'utils/context';\nimport Lottery from 'contracts/Lottery.json';\n\n\nexport default props => {\n\tconst { web3, networkId } = useContext(MyCtx);\n\n\tconst lotterySC = useAsyncMemo(async () => {\n\t\tif (_.isEmpty(web3)) return;\n\t\tconst deployedNetwork = Lottery.networks[networkId];\n\n\t\treturn new web3.eth.Contract(\n\t\t\tLottery.abi,\n\t\t\tdeployedNetwork && deployedNetwork.address,\n\t\t);\n\t}, [web3]);\n\n\tconst accounts = useAsyncMemo(async () => {\n\t\tif (_.isEmpty(web3)) return [];\n\t\treturn await web3.eth.getAccounts();\n\t}, [web3], []);\n\n\tconst manager = useAsyncMemo(async () => {\n\t\tif (_.isEmpty(lotterySC)) return null;\n\t\treturn await lotterySC.methods.manager().call()\n\t}, [lotterySC]);\n\n\tconst [players, setPlayers] = useState([]);\n\tconst [balance, setBalance] = useState('');\n\tconst [enterValue, setEnterValue] = useState('');\n\tconst [message, setMessage] = useState('');\n\n\tuseEffect(() => {\n\t\tif (_.isEmpty(lotterySC) || _.isEmpty(accounts)) return;\n\n\t\tPromise.all([\n\t\t\tlotterySC.methods.getPlayers().call(),\n\t\t\tweb3.eth.getBalance(lotterySC.options.address),\n\t\t]).then(([players, balance]) => {\n\t\t\tsetPlayers(players);\n\t\t\tsetBalance(balance);\n\t\t});\n\t}, [lotterySC, accounts]);\n\n\n\tconst onSubmut = useCallback(async event => {\n\t\tevent.preventDefault();\n\t\tsetMessage('Waiting on transaction success...');\n\n\t\tawait lotterySC.methods.enter().send({\n\t\t\tfrom: accounts[0],\n\t\t\tvalue: web3.utils.toWei(enterValue, 'ether'),\n\t\t});\n\n\t\tsetMessage('You have been entered!');\n\t});\n\n\tconst onClick = useCallback(async event => {\n\t\tsetMessage('Waiting on transaction success...');\n\n\t\tawait lotterySC.methods.pickWinner().send({\n\t\t\tfrom: accounts[0]\n\t\t});\n\n\t\tsetMessage('A winner has been picked!');\n\t});\n\n\tif (_.isEmpty(lotterySC) || _.isEmpty(manager) || _.isEmpty(accounts)) {\n\t\treturn <div>Loading Web3, accounts, and contract...</div>;\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>Lottery Contract</h1>\n\t\t\t<p>Contract Manager: {manager}</p>\n\t\t\t<p>Current players: {players.length}</p>\n\t\t\t<p>Total Balance: {web3.utils.fromWei(balance, 'ether')} ether</p>\n\t\t\t<hr />\n\t\t\t<form onSubmit={onSubmut}>\n\t\t\t\t<h4>Want to try your luck?</h4>\n\t\t\t\t<label>Amount of ether to enter</label>\n\t\t\t\t<input value={enterValue} onChange={event => setEnterValue(event.target.value)} />\n\t\t\t\t<button>Enter</button>\n\t\t\t</form>\n\t\t\t<hr />\n\t\t\t<h4>Ready to pick winner?</h4>\n\t\t\t<button onClick={onClick}>Pick a winner</button>\n\t\t\t<hr />\n\t\t\t<h4>{message}</h4>\n\t\t</div>\n\t);\n};","/Volumes/WORK/study/1.solidity/lottery-solidity/client/components/loader.js",[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":1,"column":39,"nodeType":"42","messageId":"43","endLine":1,"endColumn":50},{"ruleId":"40","severity":1,"message":"45","line":1,"column":52,"nodeType":"42","messageId":"43","endLine":1,"endColumn":61},{"ruleId":"40","severity":1,"message":"46","line":1,"column":63,"nodeType":"42","messageId":"43","endLine":1,"endColumn":71},{"ruleId":"47","severity":1,"message":"48","line":4,"column":1,"nodeType":"49","endLine":17,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":8,"column":5,"nodeType":"52","endLine":8,"endColumn":8},{"ruleId":"50","severity":1,"message":"51","line":13,"column":5,"nodeType":"52","endLine":13,"endColumn":8},{"ruleId":"47","severity":1,"message":"48","line":9,"column":1,"nodeType":"49","endLine":96,"endColumn":3},{"ruleId":"53","severity":1,"message":"54","line":47,"column":5,"nodeType":"55","endLine":47,"endColumn":26,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":50,"column":19,"nodeType":"42","endLine":50,"endColumn":30},{"ruleId":"53","severity":1,"message":"57","line":62,"column":18,"nodeType":"42","endLine":62,"endColumn":29},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'web3.eth'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",{"desc":"59","fix":"60"},"Update the dependencies array to be: [lotterySC, accounts, web3.eth]",{"range":"61","text":"62"},[1312,1333],"[lotterySC, accounts, web3.eth]"]