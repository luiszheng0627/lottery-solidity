{"ast":null,"code":"var _jsxFileName = \"/Volumes/WORK/study/1.solidity/lottery-solidity/client/src/pages/campaign.page.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useCallback, useEffect, useState } from 'react';\nimport { useAsyncMemo } from 'use-async-memo';\nimport _ from 'lodash';\nimport Factory from 'contracts/CampaignFactory.json';\nimport MyCtx from 'common/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampaignPage = props => {\n  _s();\n\n  const {\n    web3\n  } = useContext(MyCtx);\n  const factorySC = useAsyncMemo(async () => {\n    if (_.isEmpty(web3)) return;\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = Factory.networks[networkId];\n    return new web3.eth.Contract(Factory.abi, deployedNetwork && deployedNetwork.address);\n  }, [web3]); // const campaigns = useAsyncMemo(async () => {\n  //   if (_.isEmpty(factorySC)) return;\n  //   const ret = await factorySC.methods.getDeployedCampaigns().call();\n  //   console.log(ret);\n  //   return ret;\n  // }, [factorySC]);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CampaignPage, \"ZQtcM64FKYBU9jdcV2BAPRlYqro=\", false, function () {\n  return [useAsyncMemo];\n});\n\n_c = CampaignPage;\nexport default CampaignPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignPage\");","map":{"version":3,"sources":["/Volumes/WORK/study/1.solidity/lottery-solidity/client/src/pages/campaign.page.js"],"names":["React","Fragment","useContext","useCallback","useEffect","useState","useAsyncMemo","_","Factory","MyCtx","CampaignPage","props","web3","factorySC","isEmpty","networkId","eth","net","getId","deployedNetwork","networks","Contract","abi","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,SAAnD,EAA8DC,QAA9D,QAA8E,OAA9E;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWV,UAAU,CAACO,KAAD,CAA3B;AACA,QAAMI,SAAS,GAAGP,YAAY,CAAC,YAAY;AACzC,QAAIC,CAAC,CAACO,OAAF,CAAUF,IAAV,CAAJ,EAAqB;AACrB,UAAMG,SAAS,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMC,eAAe,GAAGX,OAAO,CAACY,QAAR,CAAiBL,SAAjB,CAAxB;AAEA,WAAO,IAAIH,IAAI,CAACI,GAAL,CAASK,QAAb,CACLb,OAAO,CAACc,GADH,EAELH,eAAe,IAAIA,eAAe,CAACI,OAF9B,CAAP;AAID,GAT6B,EAS3B,CAACX,IAAD,CAT2B,CAA9B,CAF4B,CAa5B;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAxBD;;GAAMF,Y;UAEcJ,Y;;;KAFdI,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { Fragment, useContext, useCallback, useEffect, useState } from 'react';\nimport { useAsyncMemo } from 'use-async-memo';\nimport _ from 'lodash';\n\nimport Factory from 'contracts/CampaignFactory.json';\nimport MyCtx from 'common/context';\n\nconst CampaignPage = props => {\n  const { web3 } = useContext(MyCtx);\n  const factorySC = useAsyncMemo(async () => {\n    if (_.isEmpty(web3)) return;\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = Factory.networks[networkId];\n\n    return new web3.eth.Contract(\n      Factory.abi,\n      deployedNetwork && deployedNetwork.address,\n    );\n  }, [web3]);\n\n  // const campaigns = useAsyncMemo(async () => {\n  //   if (_.isEmpty(factorySC)) return;\n  //   const ret = await factorySC.methods.getDeployedCampaigns().call();\n  //   console.log(ret);\n  //   return ret;\n  // }, [factorySC]);\n\n  return (\n    <Fragment>\n    </Fragment>\n  );\n}\n\nexport default CampaignPage;"]},"metadata":{},"sourceType":"module"}